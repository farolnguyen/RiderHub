<?php
require_once('app/config/database.php');
require_once('app/models/CategoryModel.php');

class CategoryApiController
{
    private $categoryModel;
    private $db;

    public function __construct()
    {
        $this->db = (new Database())->getConnection();
        $this->categoryModel = new CategoryModel($this->db);
    }

    // üîπ L·∫•y t·∫•t c·∫£ danh m·ª•c (GET /api/category)
    public function index()
    {
        header('Content-Type: application/json');
        $categories = $this->categoryModel->getAllCategories();
        echo json_encode($categories);
    }

    // üîπ L·∫•y danh m·ª•c theo ID (GET /api/category/show/:id)
    public function show($id)
    {
        header('Content-Type: application/json');
        $category = $this->categoryModel->getCategoryById($id);
        if ($category) {
            echo json_encode($category);
        } else {
            http_response_code(404);
            echo json_encode(['message' => 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i']);
        }
    }

    // üîπ Th√™m danh m·ª•c m·ªõi (POST /api/category/store)
    public function store()
    {
        header('Content-Type: application/json');

        $name = $_POST['name'] ?? '';
        $description = $_POST['description'] ?? '';
        $imagePath = "";

        // ‚úÖ Ki·ªÉm tra d·ªØ li·ªáu
        if (empty($name) || empty($description)) {
            http_response_code(400);
            echo json_encode(['message' => 'T√™n v√† m√¥ t·∫£ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng']);
            return;
        }

        // ‚úÖ X·ª≠ l√Ω ·∫£nh n·∫øu c√≥
        if (!empty($_FILES['image']['name'])) {
            $targetDir = "uploads/categories/";
            if (!is_dir($targetDir)) {
                mkdir($targetDir, 0777, true);
            }
            $targetFile = $targetDir . basename($_FILES["image"]["name"]);
            move_uploaded_file($_FILES["image"]["tmp_name"], $targetFile);
            $imagePath = $targetFile;
        }

        // ‚úÖ G·ªçi model
        $result = $this->categoryModel->addCategory($name, $description, $imagePath);
        if ($result) {
            http_response_code(201);
            echo json_encode(['message' => 'T·∫°o danh m·ª•c th√†nh c√¥ng']);
        } else {
            http_response_code(500);
            echo json_encode(['message' => 'T·∫°o danh m·ª•c th·∫•t b·∫°i']);
        }
    }
    public function update($id)
    {
        header('Content-Type: application/json');
    
        // L·∫•y d·ªØ li·ªáu t·ª´ FormData ho·∫∑c t·ª´ body (ƒë∆∞·ª£c g·ª≠i d∆∞·ªõi d·∫°ng JSON)
        $data = json_decode(file_get_contents("php://input"), true);
    
        // Ki·ªÉm tra n·∫øu kh√¥ng nh·∫≠n ƒë∆∞·ª£c d·ªØ li·ªáu
        if ($data === null) {
            http_response_code(400);
            echo json_encode(['message' => 'D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá']);
            return;
        }
    
        // L·∫•y c√°c tr∆∞·ªùng t·ª´ d·ªØ li·ªáu JSON
        $name = $data['name'] ?? ''; 
        $description = $data['description'] ?? '';  
        $existing_image = $data['existing_image'] ?? null; 
    
        // Ki·ªÉm tra t√™n v√† m√¥ t·∫£ c√≥ tr·ªëng kh√¥ng
        if (empty($name) || empty($description)) {
            http_response_code(400);
            echo json_encode(['message' => 'T√™n v√† m√¥ t·∫£ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng']);
            return;
        }
    
        // Ki·ªÉm tra x√≥a ·∫£nh n·∫øu ng∆∞·ªùi d√πng y√™u c·∫ßu
        if (isset($data['delete_image']) && $data['delete_image'] == "1") {
            if (!empty($existing_image) && file_exists($existing_image)) {
                unlink($existing_image);  // X√≥a ·∫£nh c≈©
            }
            $imagePath = null;  // ƒê·∫∑t ·∫£nh l√† null khi x√≥a
        }
    
        // N·∫øu c√≥ ·∫£nh m·ªõi, x·ª≠ l√Ω l∆∞u ·∫£nh m·ªõi
        if (!empty($_FILES['image']['name'])) {
            $targetDir = "uploads/categories/";
            if (!is_dir($targetDir)) {
                mkdir($targetDir, 0777, true);  // T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a t·ªìn t·∫°i
            }
    
            $targetFile = $targetDir . basename($_FILES["image"]["name"]);
            if (move_uploaded_file($_FILES["image"]["tmp_name"], $targetFile)) {
                $imagePath = $targetFile;
            } else {
                http_response_code(500);
                echo json_encode(['message' => 'Kh√¥ng th·ªÉ t·∫£i l√™n ·∫£nh m·ªõi']);
                return;
            }
        } else {
            // N·∫øu kh√¥ng c√≥ ·∫£nh m·ªõi, gi·ªØ ·∫£nh c≈©
            $imagePath = $existing_image;
        }
    
        // G·ªçi model ƒë·ªÉ c·∫≠p nh·∫≠t danh m·ª•c
        $result = $this->categoryModel->updateCategory($id, $name, $description, $imagePath);
    
        if ($result) {
            http_response_code(200);
            echo json_encode(['message' => 'Danh m·ª•c ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng']);
        } else {
            http_response_code(500);
            echo json_encode(['message' => 'C·∫≠p nh·∫≠t danh m·ª•c th·∫•t b·∫°i']);
        }
    }
    
    


    // üîπ Xo√° danh m·ª•c (DELETE /api/category/delete/:id)
    public function destroy($id)
    {
        header('Content-Type: application/json');

        $result = $this->categoryModel->deleteCategory($id);
        if ($result) {
            http_response_code(200); // üëà ƒê·∫£m b·∫£o l√† status 200
            echo json_encode(['message' => 'X√≥a danh m·ª•c th√†nh c√¥ng']);
        } else {
            http_response_code(500);
            echo json_encode(['message' => 'Kh√¥ng th·ªÉ x√≥a danh m·ª•c']);
        }
    }


}
